
# fine-tune models given input datasets

class Evaluator:
    ...

    # generated by ChatGPT
    # def __init__(self, model, train_loader, val_loader):
    #     self.model = model
    #     self.train_loader = train_loader
    #     self.val_loader = val_loader
    
    # def evaluate(self):
    #     self.model.eval()
    #     with torch.no_grad():
    #         train_acc = self._evaluate(self.train_loader)
    #         val_acc = self._evaluate(self.val_loader)
    #     return train_acc, val_acc

    # def _evaluate(self, loader):
    #     correct = 0
    #     total = 0
    #     for images, labels in loader:
    #         images, labels = images.to(device), labels.to(device)
    #         outputs = self.model(images)
    #         _, predicted = torch.max(outputs.data, 1)
    #         total += labels.size(0)
    #         correct += (predicted == labels).sum().item()
    #     return correct / total

